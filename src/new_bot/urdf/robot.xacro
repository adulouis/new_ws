<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="diff_drive_robot">
    <xacro:include filename = "$(find new_bot)/urdf/inertial_macros.xacro"/>
  
  <!-- BASE LINK-->

    <link name="base_link">
            
    </link>

    <joint name="chassis_joint" type="fixed">
        <parent link = "base_link"/>
        <child link = "chassis"/>
        <origin xyz = "-0.1 0 0"/>
    </joint>

    <link name = "chassis">
        <visual>
            <origin xyz = "0.15 0 0.075"/>
            <geometry>
                <box size= "0.3 0.3 0.15"/>
            </geometry>
            <material name = "white"/>
        </visual>

        <collision>
            <origin xyz = "0.15 0 0.075"/>
            <geometry>
                <box size= "0.3 0.3 0.15"/>
            </geometry>
        </collision>

        <xacro:inertial_box mass = "0.5" x="0.3" y="0.3" z="0.15">
            <origin xyz = "0.15 0 0.075"/>
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/White</material>
    </gazebo>
  <!-- Left wheel -->
    <joint name = "left_wheel_joint" type ="continuous">
        <parent link = "base_link"/>
        <child link = "left_wheel"/>
        <origin xyz= "0 0.175 0" rpy="-1.571 0 0"/>
        <axis xyz= "0 0 1"/>
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius = "0.05" length="0.04"/>
            </geometry>
            <material name = "blue"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius = "0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius = "0.05">
            <origin xyz = "0 0 0" rpy = "0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>


    <!-- RIGHT WHEEL LINK-->

    <joint name = "right_wheel_joint" type ="continuous">
        <parent link = "base_link"/>
        <child link = "right_wheel"/>
        <origin xyz= "0 -0.175 0" rpy="1.571 0 0"/>
        <axis xyz= "0 0 -1"/>
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius = "0.05" length="0.04"/>
            </geometry>
            <material name = "blue"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius = "0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius = "0.05">
            <origin xyz = "0 0 0" rpy = "0 0 0"/>
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>



    <!-- CASTER WHEEL LINK-->
    <joint name = "caster_wheel_joint" type="fixed">
        <parent link = "chassis"/>
        <child link = "caster_wheel"/>
        <origin xyz="0.24 0 0"/>
    </joint>

    <link name = "caster_wheel">
        <visual>
            <geometry>
                <sphere radius = "0.05"/>
            </geometry>
        <material name = "black"/>
        </visual>

        <collision>
            <geometry>
                <sphere radius = "0.05"/>
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="0.1" radius="0.05">
            <origin xyz = "0 0 0" rpy = "0 0 0"/>
        </xacro:inertial_sphere>
    </link>
    <gazebo reference="caster_wheel">
        <material>Gazebo/Black</material>
        <mu1 value="0.001"/>
        <mu2 value="0.001"/>
    </gazebo>
  
    <joint name="lidar_joint" type="fixed">
        <parent link="chassis"/>
        <child link="lidar_link"/>
        <origin xyz="0.1 0.0 0.175" rpy="0.0 0.0 0.0"/>
        
   </joint>

   <link name="lidar_link">
    <visual>
        <geometry>
            <cylinder radius = "0.05" length="0.04"/>
        </geometry>
        <material name = "orange"/>
    </visual>
    <collision>
        <geometry>
            <cylinder radius = "0.05" length="0.04"/>
        </geometry>
    </collision>
    <xacro:inertial_cylinder mass="0.1" length="0.04" radius = "0.05">
        <origin xyz = "0 0 0" rpy = "0 0 0"/>
    </xacro:inertial_cylinder>
   </link>


   <gazebo reference="lidar_link">
        <material>Gazebo/Orange</material>
        
        <sensor name = "laser" type="ray">
            <pose> 0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1</resolution>
                        <min_angle>-3.142</min_angle>
                        <max_angle>3.142</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>lidar_link</frame_name>
            </plugin>
        </sensor>
    </gazebo>
  

  
  

  <!-- Transmission for differential drive -->
    <transmission name="left_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="left_wheel_motor"/>
        <joint name="left_wheel_joint"/>
        <mechanicalReduction>1</mechanicalReduction>
    </transmission>

    <transmission name="right_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="right_wheel_motor"/>
        <joint name="right_wheel_joint"/>
        <mechanicalReduction>1</mechanicalReduction>
    </transmission>
</robot>
    <!-- Gazebo plugin for differential drive control -->
    <!-- <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
    
        <!-- Plugin update rate in Hz -->
            <updateRate>100</updateRate>
        
            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>left_wheel_joint</leftJoint>
        
            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>right_wheel_joint</rightJoint>
        
            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>0.2</wheelSeparation>
        
            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>0.1</wheelDiameter>
        
            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1.0</wheelAcceleration>
        
            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>100</wheelTorque>
        
            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>
        
            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>
        
            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>
        
            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_link</robotBaseFrame>
        
            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>1</odometrySource>
        
            <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>true</publishWheelTF>
        
            <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdom>true</publishOdom>
        
            <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>
        
            <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo> -->
</robot>
